local player = game.Players.LocalPlayer
local runService = game:GetService("RunService")
local userInputService = game:GetService("UserInputService")

-- GUI
local gui = Instance.new("ScreenGui")
gui.Name = "FlazedMenu"
gui.ResetOnSpawn = false
gui.Parent = player:WaitForChild("PlayerGui")

local frame = Instance.new("Frame")
frame.Size = UDim2.new(0, 250, 0, 150)
frame.Position = UDim2.new(0, 30, 0, 150)
frame.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
frame.Active = true
frame.Draggable = true
frame.BorderSizePixel = 0
frame.Parent = gui

-- Label
local label = Instance.new("TextLabel")
label.Size = UDim2.new(1, 0, 0, 20)
label.Position = UDim2.new(0, 0, 0, 0)
label.BackgroundTransparency = 1
label.Text = "˜”*°•.˜”*°• Made By Flazed •°*”˜.•°*”˜"
label.TextColor3 = Color3.fromRGB(255, 255, 255)
label.Font = Enum.Font.Gotham
label.TextSize = 12
label.Parent = frame

-- Open/Close GUI Button
local toggleBtn = Instance.new("TextButton")
toggleBtn.Size = UDim2.new(0, 20, 0, 20)
toggleBtn.Position = UDim2.new(1, 5, 0, 0)
toggleBtn.AnchorPoint = Vector2.new(0, 0)
toggleBtn.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
toggleBtn.Text = "-"
toggleBtn.TextColor3 = Color3.new(1, 1, 1)
toggleBtn.Font = Enum.Font.Gotham
toggleBtn.TextSize = 14
toggleBtn.BorderSizePixel = 0
toggleBtn.Parent = frame

local isOpen = true
local function toggleGUI()
	isOpen = not isOpen
	for _, child in pairs(frame:GetChildren()) do
		if child ~= toggleBtn then
			child.Visible = isOpen
		end
	end
	toggleBtn.Text = isOpen and "-" or "+"
end

toggleBtn.MouseButton1Click:Connect(toggleGUI)



-- Pull/Throw Button
local pulling = false
local pulledOnce = false
local macroBtn = Instance.new("TextButton")
macroBtn.Position = UDim2.new(0.05, 0, 0, 30)
macroBtn.Text = "Throw: OFF"
macroBtn.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
macroBtn.TextColor3 = Color3.new(1, 1, 1)
macroBtn.Font = Enum.Font.Gotham
macroBtn.BorderSizePixel = 0
macroBtn.Parent = frame

macroBtn.MouseButton1Click:Connect(function()
	pulling = not pulling
	pulledOnce = pulling or pulledOnce
	macroBtn.Text = pulling and "Pull: ON" or "Throw: OFF"
end)

-- Get rope
local function getRope()
	local ropesFolder = workspace:FindFirstChild("Ropes")
	if not ropesFolder then return nil end
	local userRope = ropesFolder:FindFirstChild(player.Name)
	if not userRope then return nil end
	return userRope:FindFirstChild("mainConnectionRope")
end

-- EaseIn
local isEaseInActive = false
local speed = 27

local easeInBtn = Instance.new("TextButton")
easeInBtn.Position = UDim2.new(0.05, 0, 0, 70)
easeInBtn.Text = "EaseIn: OFF"
easeInBtn.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
easeInBtn.TextColor3 = Color3.new(1, 1, 1)
easeInBtn.Font = Enum.Font.Gotham
easeInBtn.BorderSizePixel = 0
easeInBtn.Parent = frame

easeInBtn.MouseButton1Click:Connect(function()
	isEaseInActive = not isEaseInActive
	easeInBtn.Text = isEaseInActive and "EaseIn: ON" or "EaseIn: OFF"
	local rope = getRope()
	if rope and isEaseInActive then
		rope.Length = 50
	end
end)

-- Kill Button
local killBtn = Instance.new("TextButton")
killBtn.Position = UDim2.new(0.2, 0, 0, 110)
killBtn.Text = "Kill: OFF"
killBtn.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
killBtn.TextColor3 = Color3.new(1, 1, 1)
killBtn.Font = Enum.Font.Gotham
killBtn.BorderSizePixel = 0
killBtn.Parent = frame

local killing = false
killBtn.MouseButton1Click:Connect(function()
	killing = not killing
	killBtn.Text = killing and "Kill: ON" or "Kill: OFF"

	local dmg = workspace:FindFirstChild("Pit") and workspace.Pit:FindFirstChild("Damage")
	if dmg then
		dmg.Size = killing and Vector3.new(2e8, 2e8, 2e8) or Vector3.new(0, 0, 0)
	end

	for _, v in pairs(player.Character:GetDescendants()) do
		if v:IsA("BasePart") then
			v.CanTouch = not killing
			v.CanCollide = not killing
		end
	end
end)

-- Remove Resize Button if it exists
if frame:FindFirstChild("Resize") then
	frame.Resize:Destroy()
end

-- Resize Handle
local resize = Instance.new("TextButton")
resize.Size = UDim2.new(0, 16, 0, 16)
resize.Position = UDim2.new(1, -4, 1, -4)
resize.AnchorPoint = Vector2.new(1, 1)
resize.BackgroundColor3 = Color3.fromRGB(120, 120, 120)
resize.Text = ""
resize.BorderSizePixel = 0
resize.Parent = frame

-- Resize Logic
local resizing = false
local startSize, startPos
resize.MouseButton1Down:Connect(function()
	resizing = true
	startSize = frame.AbsoluteSize
	startPos = Vector2.new(player:GetMouse().X, player:GetMouse().Y)
	frame.Draggable = false
end)

userInputService.InputEnded:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 then
		resizing = false
		frame.Draggable = true
	end
end)

-- Base size reference
local baseSize = Vector2.new(250, 150)
local function updateScale()
	local scaleX = frame.AbsoluteSize.X / baseSize.X
	local scaleY = frame.AbsoluteSize.Y / baseSize.Y
	local scale = math.min(scaleX, scaleY)

	macroBtn.TextSize = 15 * scale
	easeInBtn.TextSize = 15 * scale
	killBtn.TextSize = 13 * scale
	label.TextSize = 12 * scale

	macroBtn.Size = UDim2.new(0.9, 0, 0, 30 * scale)
	easeInBtn.Size = UDim2.new(0.9, 0, 0, 30 * scale)
	killBtn.Size = UDim2.new(0.6, 0, 0, 25 * scale)
end

-- Main Loop
runService.RenderStepped:Connect(function(dt)
	local rope = getRope()
	if rope then
		if isEaseInActive then
			rope.Length = math.max(rope.Length - speed * dt, 5)
			if rope.Length <= 5 then
				isEaseInActive = false
				easeInBtn.Text = "EaseIn: OFF"
			end
		else
			if pulling then
				rope.Length = 5
			elseif pulledOnce then
				rope.Length = 1000000000000
			end
		end
	end

	if resizing then
		local delta = Vector2.new(player:GetMouse().X, player:GetMouse().Y) - startPos
		frame.Size = UDim2.new(0, math.max(50, startSize.X + delta.X), 0, math.max(50, startSize.Y + delta.Y))
		updateScale()
	end
end)

-- FLY and RR Buttons (Shift-lock Fly and Remove Ragdoll)
-- Fly Script with ShiftLock Movement and GUI Open/Close Toggle

local player = game.Players.LocalPlayer
local runService = game:GetService("RunService")
local userInputService = game:GetService("UserInputService")

local gui = player.PlayerGui:WaitForChild("FlazedMenu")
local frame = gui:WaitForChild("Frame")

-- Fly Button
local flyBtn = Instance.new("TextButton")
flyBtn.Size = UDim2.new(0, 31, 0, 29)
flyBtn.Position = UDim2.new(0, 0, 0.807, 0)
flyBtn.Text = "Fly"
flyBtn.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
flyBtn.TextColor3 = Color3.new(1, 1, 1)
flyBtn.Font = Enum.Font.Gotham
flyBtn.TextSize = 10
flyBtn.BorderSizePixel = 0
flyBtn.Parent = frame

local flyEnabled = false
local bodyGyro, bodyVel

local function startFly()
	local character = player.Character
	if not character then return end
	local hrp = character:FindFirstChild("HumanoidRootPart")
	if not hrp then return end

	bodyGyro = Instance.new("BodyGyro")
	bodyGyro.P = 9e4
	bodyGyro.MaxTorque = Vector3.new(9e9, 9e9, 9e9)
	bodyGyro.CFrame = hrp.CFrame
	bodyGyro.Parent = hrp

	bodyVel = Instance.new("BodyVelocity")
	bodyVel.Velocity = Vector3.zero
	bodyVel.MaxForce = Vector3.new(9e9, 9e9, 9e9)
	bodyVel.Parent = hrp

	game:GetService("StarterGui"):SetCore("ToggleMouseLock", true)
end

local function stopFly()
	if bodyGyro then bodyGyro:Destroy() end
	if bodyVel then bodyVel:Destroy() end
	game:GetService("StarterGui"):SetCore("ToggleMouseLock", false)
end

flyBtn.MouseButton1Click:Connect(function()
	flyEnabled = not flyEnabled
	if flyEnabled then
		startFly()
	else
		stopFly()
	end
end)

runService.RenderStepped:Connect(function()
	if flyEnabled then
		local cam = workspace.CurrentCamera
		local direction = Vector3.zero

		if userInputService:IsKeyDown(Enum.KeyCode.W) then direction += cam.CFrame.LookVector end
		if userInputService:IsKeyDown(Enum.KeyCode.S) then direction -= cam.CFrame.LookVector end
		if userInputService:IsKeyDown(Enum.KeyCode.A) then direction -= cam.CFrame.RightVector end
		if userInputService:IsKeyDown(Enum.KeyCode.D) then direction += cam.CFrame.RightVector end
		if userInputService:IsKeyDown(Enum.KeyCode.Space) then direction += cam.CFrame.UpVector end
		if userInputService:IsKeyDown(Enum.KeyCode.LeftControl) then direction -= cam.CFrame.UpVector end

		local hrp = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
		if hrp and bodyGyro and bodyVel then
			bodyGyro.CFrame = cam.CFrame
			bodyVel.Velocity = direction.Unit * 70
		end
	end
end)

-- Toggle GUI Button
local toggleBtn = Instance.new("TextButton")
toggleBtn.Size = UDim2.new(0, 20, 0, 20)
toggleBtn.Position = UDim2.new(1, 5, 0, 0)
toggleBtn.AnchorPoint = Vector2.new(0, 0)
toggleBtn.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
toggleBtn.Text = "-"
toggleBtn.TextColor3 = Color3.new(1, 1, 1)
toggleBtn.Font = Enum.Font.Gotham
toggleBtn.TextSize = 14
toggleBtn.BorderSizePixel = 0
toggleBtn.Parent = frame

local isOpen = true
local function toggleGUI()
	isOpen = not isOpen
	frame.Visible = isOpen
	toggleBtn.Text = isOpen and "-" or "+"
	toggleBtn.Parent = isOpen and frame or gui
end

toggleBtn.MouseButton1Click:Connect(toggleGUI)
-- Fly Button
local flyBtn = Instance.new("TextButton")
flyBtn.Size = UDim2.new(0, 31, 0, 29)
flyBtn.Position = UDim2.new(0, 0, 0.807, 0)
flyBtn.Text = "Fly"
flyBtn.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
flyBtn.TextColor3 = Color3.new(1, 1, 1)
flyBtn.Font = Enum.Font.Gotham
flyBtn.TextSize = 10
flyBtn.BorderSizePixel = 0
flyBtn.Parent = frame

local flying = false
local function fly()
	local char = player.Character
	local hrp = char and char:FindFirstChild("HumanoidRootPart")
	if not hrp then return end

	local bv = Instance.new("BodyVelocity", hrp)
	bv.Velocity = Vector3.new(0, 0, 0)
	bv.MaxForce = Vector3.new(1e9, 1e9, 1e9)
	bv.Name = "FlyVelocity"

	local flyingConn
	flyingConn = runService.RenderStepped:Connect(function()
		if not flying or not player.Character or not player.Character:FindFirstChild("HumanoidRootPart") then
			bv:Destroy()
			flyingConn:Disconnect()
			return
		end

		local direction = Vector3.zero
		if userInputService:IsKeyDown(Enum.KeyCode.W) then direction += workspace.CurrentCamera.CFrame.LookVector end
		if userInputService:IsKeyDown(Enum.KeyCode.S) then direction -= workspace.CurrentCamera.CFrame.LookVector end
		if userInputService:IsKeyDown(Enum.KeyCode.A) then direction -= workspace.CurrentCamera.CFrame.RightVector end
		if userInputService:IsKeyDown(Enum.KeyCode.D) then direction += workspace.CurrentCamera.CFrame.RightVector end
		if userInputService:IsKeyDown(Enum.KeyCode.Space) then direction += Vector3.new(0, 1, 0) end
		if userInputService:IsKeyDown(Enum.KeyCode.LeftControl) then direction -= Vector3.new(0, 1, 0) end

		bv.Velocity = direction.Unit * 70
	end)
end

flyBtn.MouseButton1Click:Connect(function()
	flying = not flying
	if flying then
		fly()
	else
		local hrp = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
		if hrp and hrp:FindFirstChild("FlyVelocity") then
			hrp.FlyVelocity:Destroy()
		end
	end
end)

-- Toggle Button (Close/Open GUI)
local toggleBtn = Instance.new("TextButton")
toggleBtn.Size = UDim2.new(0, 20, 0, 20)
toggleBtn.Position = UDim2.new(1, 5, 0, 0)
toggleBtn.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
toggleBtn.Text = "-"
toggleBtn.TextColor3 = Color3.new(1, 1, 1)
toggleBtn.Font = Enum.Font.Gotham
toggleBtn.TextSize = 14
toggleBtn.BorderSizePixel = 0
toggleBtn.Parent = frame

local minimized = false
toggleBtn.MouseButton1Click:Connect(function()
	minimized = not minimized
	frame.Visible = not minimized

	if minimized then
		local plusBtn = Instance.new("TextButton")
		plusBtn.Size = UDim2.new(0, 20, 0, 20)
		plusBtn.Position = UDim2.new(0, 30, 0, 150)
		plusBtn.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
		plusBtn.Text = "+"
		plusBtn.TextColor3 = Color3.new(1, 1, 1)
		plusBtn.Font = Enum.Font.Gotham
		plusBtn.TextSize = 14
		plusBtn.BorderSizePixel = 0
		plusBtn.Active = true
		plusBtn.Draggable = true
		plusBtn.Parent = gui


		plusBtn.MouseButton1Click:Connect(function()
			frame.Visible = true
			minimized = false
			plusBtn:Destroy()
		end)
	end
end)

-- RR (Remove Ragdoll)
local rrBtn = Instance.new("TextButton")
rrBtn.Size = UDim2.new(0, 31, 0, 29)
rrBtn.Position = UDim2.new(0.876, 0, 0.807, 0)
rrBtn.Text = "RR"
rrBtn.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
rrBtn.TextColor3 = Color3.new(1, 1, 1)
rrBtn.Font = Enum.Font.Gotham
rrBtn.TextSize = 10
rrBtn.BorderSizePixel = 0
rrBtn.Parent = frame

local function monitorRagdoll(character)
	task.spawn(function()
		while character and character.Parent do
			local ragdoll = character:FindFirstChild("ragdollValue")
			if ragdoll then
				ragdoll:Destroy()
			end
			task.wait(0.1)
		end
	end)
end

rrBtn.MouseButton1Click:Connect(function()
	local character = player.Character
	if character then
		monitorRagdoll(character)
	end
end)

player.CharacterAdded:Connect(function(char)
	monitorRagdoll(char)
end)
if player.Character then
	monitorRagdoll(player.Character)
end


updateScale()
